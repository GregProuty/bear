version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: aave_rebalancer_prod
      POSTGRES_USER: aave_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/database/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U aave_user"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://aave_user:${POSTGRES_PASSWORD}@postgres:5432/aave_rebalancer_prod
      PORT: 4000
      
      # RPC URLs
      ETHEREUM_RPC_URL: ${ETHEREUM_RPC_URL}
      BASE_RPC_URL: ${BASE_RPC_URL}
      OPTIMISM_RPC_URL: ${OPTIMISM_RPC_URL}
      ARBITRUM_RPC_URL: ${ARBITRUM_RPC_URL}
      POLYGON_RPC_URL: ${POLYGON_RPC_URL}
      
      # Vault addresses
      AAVE_VAULT_BASE: ${AAVE_VAULT_BASE}
      AAVE_VAULT_ETHEREUM: ${AAVE_VAULT_ETHEREUM}
      AAVE_VAULT_OPTIMISM: ${AAVE_VAULT_OPTIMISM}
      AAVE_VAULT_ARBITRUM: ${AAVE_VAULT_ARBITRUM}
      AAVE_VAULT_POLYGON: ${AAVE_VAULT_POLYGON}
      
      # Security
      CORS_ORIGIN: ${FRONTEND_URL}
      
    ports:
      - "4000:4000"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  postgres_data: 